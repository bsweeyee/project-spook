<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-5</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///debug messages
showDebug = true;

playerLifeMessage = "player life: ";
spawnerTimerMessage = "spawner timer: ";
torchLifeMessage = "torch Life: ";
playerScoreMessage = "score: ";
playerCigarMessage = "cigar: ";
playerComboMessage = "combo: ";

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///create global player score, combo and comboTimer
MAX_COMBO_TIMER = room_speed * 2.5;

global.playerScore = 0;

global.combo = 0;

comboTimer = MAX_COMBO_TIMER;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///create 3 mist objects
mist_1 = instance_create(room_width/2, -96, object_Mist);
mist_2 = instance_create(-96, room_height*0.7155, object_Mist);
mist_3 = instance_create(room_width+96, room_height*0.7155, object_Mist);

mist_1.isMoveDown = true;
mist_2.isMoveRight = true;
mist_3.isMoveLeft = true;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///press "r" to restart
if (showDebug)  {
    if (keyboard_check_pressed(ord('R')))   {
        game_restart();
    }   
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///checks if 5 seconds have passed and resets combo if so
if (comboTimer &lt;= 0)    {
    global.combo = 0;
} else  {
    comboTimer -= 1;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///draw debug message
if (showDebug)  {
    //for all enemies on the field, draw their death timers above them
    
    for (var i=0; i &lt; instance_number(object_CommonEnemyTraits); i++)   {
        draw_set_color(c_white);
        var inst = instance_find(object_CommonEnemyTraits, i);
        draw_text(inst.x, inst.y - 50, inst.hp);
    }
    
    ///draw life of player
    draw_text(10, 10, playerLifeMessage);
    draw_text(110, 10, object_Player_1_Stub.life); 
    
    //draw spawn timer
    draw_text(10, 30, spawnerTimerMessage);
    draw_text(140, 30, object_CommonSpawnerTraits.timer);
    
    //draw mist alarm
    draw_text(10, 50, "mist alarm");
    draw_text(110, 50, object_Mist_Controller.alarm[0]);
    
     //draw score
    draw_text(10, 70, playerScoreMessage);
    draw_text(110, 70, global.playerScore);
    
    //draw combo
    draw_text(10, 90, playerComboMessage);
    draw_text(110, 90, global.combo);
    
    //draw cigar number
    draw_text(10, 110, playerCigarMessage);
    draw_text(110, 110, object_Player_1_Stub.cigarAmount);
    
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
