<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-6</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///initialize screen variables

NUM_OF_MISTS = 3;
MIST_SCALE = 7;
MIST_ALPHA = 0.6;
MAX_SIZE = 7.5;
MAX_VSPEED = 0.5;
//MAX_RATE = (1/room_speed) * 0.6;

background_alpha[0] = 0.3;
showButtons = false;

gameStart = false;
totalMistOut = 0;


//isGrowing = true;
//growthRate = MAX_RATE;

instance_create(room_width * (1/2), room_height*(1/4), object_Title);
instance_create(room_width * (12/32), room_height*(3/4), object_Start_Button);
instance_create(room_width * (10/16), room_height*(3/4), object_Quit_Button);

window_set_cursor(cr_none);

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///create a series of mist

mist[NUM_OF_MISTS] = 0;

mist[0] = instance_create(room_width/2, room_height*(14/16), object_Mist);
mist[1] = instance_create(0, room_height*(14/16), object_Mist);
mist[2] = instance_create(room_width, room_height*(14/16), object_Mist);


for (var i=0;i&lt;NUM_OF_MISTS;i++)    {
    mist[i].image_xscale = MIST_SCALE;
    mist[i].image_yscale = MIST_SCALE;
    mist[i].image_alpha = MIST_ALPHA;
    mist[i].mistSpeed = 3;
}

mist[0].mistSpeed = 0;
mist[0].vspeed = MAX_VSPEED;
moveUp = false;
moveDown = true;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///press "r" to restart
//if (showDebug)  {
    if (keyboard_check_pressed(ord('R')))   {
        game_restart();
    }   
//}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///make stationary mist bounce
if (!gameStart) {
if (mist[0].vspeed &lt;= -MAX_VSPEED)   {
    moveUp = true;
    moveDown = false;
} else if (mist[0].vspeed &gt;= MAX_VSPEED) {
    moveUp = false;
    moveDown = true;
}

// this acts like a resistive force, slowing down the object
if (moveDown) {
    mist[0].vspeed -= (1/room_speed);
} else if (moveUp)  {
    mist[0].vspeed += (1/room_speed);
}
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///when game is starting, make all stationary clouds + fog move away, vaniash title and buttons
if (gameStart)  {
    for (var i=0;i&lt;NUM_OF_MISTS;i++)    {
        
       
        if (mist[i].image_alpha &lt;= 0)   {
            room_goto(roomTest);
        }
        mist[i].image_alpha -= 1/(2*room_speed);
        mist[i].vspeed = 0;
        mist[i].mistSpeed = 0;
        
    }
    
    for (var j=0; j&lt;instance_number(object_Fog);j++)    {
        var tempFog = instance_find(object_Fog, j);
        if (instance_exists(tempFog))   {
            with (tempFog)  {
                image_alpha -= 1/(2*room_speed);
                if (image_alpha &lt;= 0)   {
                    instance_destroy();
                }
            }
        }
    }
    
    if (instance_exists(object_Title))   {
        object_Title.isIncreaseSize = false;
    }
    
    if (instance_exists(object_Start_Button))   {
        with (object_Start_Button)  {
            instance_destroy();
        }   
    }
    
    if (instance_exists(object_Quit_Button))   {
        with (object_Quit_Button)  {
            instance_destroy();
        }  
    }
    
    
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///if mist lands outside of screen, teleport it back to other side of screen

if (!gameStart) {
for (var i =0;i&lt;NUM_OF_MISTS;i++)  {
    if (mist[i].x &gt; (room_width + (sprite_get_width(sprite_Mist_2)*MIST_SCALE)/2)) {
        mist[i].x = -sprite_get_width(sprite_Mist_2)*MIST_SCALE/2;
    } else if ((mist[i].x)&lt; -(sprite_get_width(sprite_Mist_2)*MIST_SCALE)/2)    {
        mist[i].x = room_width + (sprite_get_width(sprite_Mist_2)*MIST_SCALE)/2;
    }
}
} else  {
for (var i =0;i&lt;NUM_OF_MISTS;i++)  {
    if (mist[i].x &gt; (room_width + (sprite_get_width(sprite_Mist_2)*MIST_SCALE)/2)) {
        mist[i].mistSpeed = 0;
    } else if ((mist[i].x)&lt; -(sprite_get_width(sprite_Mist_2)*MIST_SCALE)/2)    {
        mist[i].mistSpeed = 0;;
    }
}
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///draw debug messages

draw_set_font(-1);
draw_text(10, 10, "FPS = " + string(fps_real));
draw_text(10, 30, instance_number(object_Mist));
draw_text(10, 50, instance_exists(mist[0]));
draw_text(10, 70, instance_exists(mist[1]));
draw_text(10, 90, instance_exists(mist[2]));
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
