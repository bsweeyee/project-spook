<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-3</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///initialize variables for ultimate

TOTAL_PERCENT = 1;

//percentage distribution
constant[0] = 0.05;
constant[1] = 0.03;
constant[2] = 0.02;

negative_percent = 0;
neutral_percent = 0;
positive_percent = 0;

alarm[0] = room_speed * 5;
canActivate = false;

messageNum = 15;

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///initialize all power up message

isShowMessage = false;
isPlayMessage = false;

textPos_X = room_width/2;
textPos_Y = room_height*0.4;
textAlpha = 0;

powerUpMessage[0] = "Slow and steady wins the race (or does it?)";
powerUpMessage[1] = "More friends!";
powerUpMessage[2] = "Up up down down left right left right B A";
powerUpMessage[3] = "DISCO PARTY!!!";
powerUpMessage[4] = "No friends!";
powerUpMessage[5] = "empty";
powerUpMessage[6] = "Magikarp used Splash!";


</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///initialize variables for ULTIMATE VISUAL INDICATION
scale_X = 1;
scale_Y = 1;
alpha = 1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///when alarm 1 is off, turn off show message
isShowMessage = false;
textAlpha = 0;
textPos_Y = room_height * 0.4;
alpha = 1;
scale_X = 1;
scale_Y = 1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///controls when ultimate can activate
canActivate = true;
alarm[0] = room_speed * 5;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///when right click is pressed, based on current combo level, perform combo action

if (instance_exists(object_Player_1_Stub))  {
if (mouse_check_button_pressed(mb_right) &amp;&amp; canActivate)   {
     
     if (global.combo &lt;= 20) {
        negative_percent = TOTAL_PERCENT - (global.combo * constant[0]);
        neutral_percent = global.combo * constant[1];
        positive_percent = global.combo * constant[2];
     } else if (global.combo &gt; 20 &amp;&amp; global.combo &lt;= 32) {
        negative_percent = 0;
        neutral_percent = (global.combo * constant[1]) - (global.combo * constant[0]);
        positive_percent = global.combo * constant[2] + (global.combo * constant[0]);
     } else if (global.combo &gt; 32)  {
        negative_percent = 0;
        neutral_percent = 0;
        positive_percent = 100;
     }
     
     var ultimateType = chooseUltimateType(negative_percent, neutral_percent, positive_percent);
     messageNum = activateUltimate(ultimateType);
     
     canActivate = false;
     isShowMessage = true;
     isPlayMessage = true;
}
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///slowly increase text y pos and alpha

if (isPlayMessage)  {
if (textPos_Y &gt; (room_height * 0.15))   {
    textPos_Y -= 1;
} else if (textPos_Y &lt;= (room_height * 0.15))   {
    textPos_Y = room_height * 0.15;
}
    
if (textAlpha &lt; 1) {
    textAlpha += (1/room_speed);
} else if (textAlpha &gt;= 1)  {
    alarm[1] = room_speed;
    isPlayMessage = false;
}
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///when message is showing, continue make the scale and alpha expand, else reset it
if (isShowMessage)  {
    alpha -= 1/room_speed;
    scale_X += sign(image_xscale) * (1/room_speed);
    scale_Y += sign(image_yscale) * (1/room_speed);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///draw powerup message

if (isShowMessage)   {
    draw_set_halign(fa_center);
    draw_set_font(font_NeonPixel);
    draw_set_color(c_white);
    draw_set_alpha(textAlpha);
    draw_text(textPos_X, textPos_Y, powerUpMessage[messageNum]);
    
    draw_set_font(-1);
    draw_set_alpha(1);
    draw_set_halign(fa_left);
    
    draw_sprite_ext(spr_playerStub, 0, object_Player_1_Stub.x, object_Player_1_Stub.y, scale_X, scale_Y, 0, c_white, alpha);
}

//draw_text(10, 200, alarm[0]);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
