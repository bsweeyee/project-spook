<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprite_Enemy_3_Mini</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-1</depth>
  <persistent>0</persistent>
  <parentName>object_CommonEnemyTraits</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///inherited parent code
event_inherited();
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///overwrite initial variables
MAX_HP *= 0.5;

hp = MAX_HP;

deathCount *= 0.5;

BASE_SCORE = MAX_HP;

scoreValue = BASE_SCORE;

damage = 10;

switch (irandom(2)) {
   case 0:
    spriteExposed = sprite_Enemy_3_Mini;
    spriteShadow = sprite_Enemy_3_Mini_Shadow;   
    break;
   case 1:
    spriteExposed = sprite_Enemy_3_Mini2;
    spriteShadow = sprite_Enemy_3_Mini2_Shadow;   
    break;
   case 2:
    spriteExposed = sprite_Enemy_3_Mini3;
    spriteShadow = sprite_Enemy_3_Mini3_Shadow;   
    break;      
}

enemy = object_Enemy_Mini;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///create animation speed and size
image_xscale = 1;
image_yscale = 1;
image_speed = 0.1;

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///alarm that starts every 5 frames to change direction
alarm[0] = 5;
dirValue = 30;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///iniitialise sound variables
alarm[1] = room_speed*1;
isSoundPlayedReveal = true;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>object_Enemy_Mini</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///reset sound timer
isSoundPlayedReveal = false;
alarm[1] = room_speed*1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///every few frames, change direction of spirit
direction += dirValue;

if (dirValue &gt; 4)  {
    dirValue -= 2;
}
alarm[0] = 5;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///inherit parent
event_inherited();
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///when dead, do death animation
if (isDead) {
    speed = 0;
    image_alpha -= (1/room_speed);
    image_xscale += sign(image_xscale) * (1/room_speed);
    image_yscale += (1/room_speed); 
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///bounce around screen

/*assumption: object bounced off is 90 degrees and 180 degrees (because walls are
              90 and 180 degrees only);
*/

var alpha = 360 - direction;
var phi = 0;
var smallerAngle = 0;
var largerAngle = 0;

if (alpha &lt;= direction)  {
    smallerAngle = alpha;
    largerAngle = direction;
} else {
    smallerAngle = direction;
    largerAngle = alpha;
}

if (direction &gt; 0 &amp;&amp; direction &lt; 180)  {
    phi = smallerAngle; 
} 

if (direction &gt; 180 &amp;&amp; direction &lt; 360) {
    phi = largerAngle;
}

if (x &gt; room_width || x &lt; 0)    {    
    direction = 2*90 - phi;
}

if (y &gt; room_height || y &lt; 0)   {
    direction = 2*180 - phi;
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///have sprite face the player

if (instance_exists(object_Player_1_Stub))  {
if (x &gt; object_Player_1_Stub.x) {
    if (sign(image_xscale) == -1)   {
        image_xscale *= 1;
    } else  {
        image_xscale *= -1;
    }
} else  {
    if (sign(image_xscale) == -1)   {
        image_xscale *= -1;
    } else  {
        image_xscale *= 1;
    }
}
} else  {
if (x &gt; room_width/2) {
    if (sign(image_xscale) == -1)   {
        image_xscale *= 1;
    } else  {
        image_xscale *= -1;
    }
} else  {
    if (sign(image_xscale) == -1)   {
        image_xscale *= -1;
    } else  {
        image_xscale *= 1;
    }
}
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///play sound

isClicked = place_meeting(x, y, object_Hitbox_TorchCommon) || 
    place_meeting(x, y, object_Hitbox_CigarLight);

snd = 0;

if(!isSoundPlayedReveal &amp;&amp; isClicked){
    snd = audio_play_sound(
       choose(
       sfx_jr_giggle1,
       sfx_jr_giggle2,
       sfx_jr_giggle3,
       sfx_jr_giggle4,
       sfx_jr_giggle5,
        sfx_jr_giggle6,
       ),0,false);
    isSoundPlayedReveal = true;
}

/*if(!audio_is_playing(snd))
    isSoundPlayedReveal = false;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="object_Player_1_Stub">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///when collide, reduce life
other.life -= damage;
instance_change(object_Enemy_Mini_Attack, true);

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
