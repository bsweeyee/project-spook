<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprite_logo</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-6</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///create and slowly increase in size

isIncreaseSize = true;
MAX_SIZE = 3;
SPEED_CAP = (1/(2*room_speed));

sizeSpeed = 0.1;
image_xscale = 0.5;
image_yscale = 0.5;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///image attributes
MAX_ALPHA = 0.7;
image_alpha = 0;

MAX_SPEED = 0.7;
vspeed = MAX_SPEED;

moveUp = false;
moveDown = true;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///slowly increase size

if (isIncreaseSize) {
image_xscale += sizeSpeed;
image_yscale += sizeSpeed;

if (sizeSpeed &gt; SPEED_CAP)   {
    sizeSpeed -= (1/(2*room_speed));
}

if (image_xscale &gt;= MAX_SIZE &amp;&amp; image_yscale &gt;= MAX_SIZE) {
    image_xscale = MAX_SIZE;
    image_yscale = MAX_SIZE;
}
} else  {
    sizeSpeed = 1/room_speed;
    image_xscale -= sizeSpeed;
    image_yscale -= sizeSpeed;

if (image_xscale &lt;= 0 &amp;&amp; image_yscale &lt;=0) {
    instance_destroy();
}
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///slowly increase image alpha
if (image_alpha &lt; MAX_ALPHA &amp;&amp; isIncreaseSize)    {
    image_alpha += (1/(room_speed * 3));
} else if (image_alpha &gt;= MAX_ALPHA &amp;&amp; isIncreaseSize){
    image_alpha = MAX_ALPHA;
} else if (!isIncreaseSize) {
    image_alpha -= (1/(room_speed));
} 
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///if image alpha is at maximum, make title bounce
if (image_alpha &gt;= MAX_ALPHA)   {
if (vspeed &lt;= -MAX_SPEED)   {
    moveUp = true;
    moveDown = false;
} else if (vspeed &gt;= MAX_SPEED) {
    moveUp = false;
    moveDown = true;
}

// this acts like a resistive force, slowing down the object
if (moveDown) {
    vspeed -= (1/room_speed);
} else if (moveUp)  {
    vspeed += (1/room_speed);
}
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
